# Sample workflow to access AWS resources when workflow is tied to branch
name: AWS example workflow
on: push
env:
    AWS_REGION: 'eu-west-1'
# permission can be added at job level or workflow level
permissions:
    id-token: write # This is required for requesting the JWT
    contents: read # This is required for actions/checkout
jobs:
    BuildBackendPipeline:
        runs-on: ubuntu-latest
        steps:
            - name: checkout the repo
              uses: actions/checkout@v3

            - name: configure aws credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                  role-to-assume: arn:aws:iam::803033771544:role/github-oidc-role-to-assume # Instructions: https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
                  aws-region: ${{ env.AWS_REGION }}

            - name: sam build
              run: |
                  sam build --use-container
                  sam deploy --parameter-overrides GithubRepoName=${{github.event.repository.name}}

    BuildFrontendPipeline:
        runs-on: ubuntu-latest
        steps:
            - name: checkout the repo
              uses: actions/checkout@v3

            - name: setup node
              uses: actions/setup-node@v3
              with:
                  node-version: '18'

            - name: install node dependencies
              run: |
                  npm install

            - name: configure aws credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                  role-to-assume: arn:aws:iam::803033771544:role/github-oidc-role-to-assume # Instructions: https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
                  aws-region: ${{ env.AWS_REGION }}

            - name: build frontend
              working-directory: ./frontend
              run: |
                  npm run build

            - name: upload new frontend artifacts
              working-directory: ./frontend
              run: |
                  echo ssmHostingBucketParameter=${{github.event.repository.name}}-hosting-bucket
                  echo hostingBucketName=$(aws ssm get-parameter --name ${{ssmHostingBucketParameter}})
                  aws s3 cp /build s3://${{hostingBucketName}}/ --recursive
